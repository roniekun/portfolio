//spreading ref from an array
                                            ref={(el) => (refArray.current[index] = el)}

 // getting the value of motion (useTransform Hook)     

      
        useEffect(() => {
            const unsubscribe = calcProgress.onChange((latest) => {
            setCurrentProgress(Math.round(latest));
            });

            return () => unsubscribe();
        }, [calcProgress]);                                 

//scrolling listener

  // useEffect(() => {
  //   const handleScroll = () => {
  //     setScrolled(window.scrollY > currentScroll);
  //     setCurrentScroll(window.scrollY);
  //   };

  //   window.addEventListener("scroll", handleScroll);

  //   return () => {
  //     window.removeEventListener("scroll", handleScroll);
  //   };
  // }, [window.scrollY]);

  // responsive screen size     

  //timer


    let timer = 0;
    setInterval(() => {
      if (timer <= 100) {
        setProgress(timer++);
      }
      timer += 3;
    }, 60);